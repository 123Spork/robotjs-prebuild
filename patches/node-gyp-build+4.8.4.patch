diff --git a/node_modules/node-gyp-build/node-gyp-build.js b/node_modules/node-gyp-build/node-gyp-build.js
index 76b96e1..9164f6a 100644
--- a/node_modules/node-gyp-build/node-gyp-build.js
+++ b/node_modules/node-gyp-build/node-gyp-build.js
@@ -1,6 +1,7 @@
 var fs = require('fs')
 var path = require('path')
 var os = require('os')
+var abi = require('node-abi')
 
 // Workaround to fix webpack's build warnings: 'the request of a dependency is an expression'
 var runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require // eslint-disable-line
@@ -9,6 +10,9 @@ var vars = (process.config && process.config.variables) || {}
 var prebuildsOnly = !!process.env.PREBUILDS_ONLY
 var abi = process.versions.modules // TODO: support old node where this is undef
 var runtime = isElectron() ? 'electron' : (isNwjs() ? 'node-webkit' : 'node')
+if (process.env.npm_config_target) {
+  abi = nodeAbi.getAbi(process.env.npm_config_target, runtime)
+}
 
 var arch = process.env.npm_config_arch || os.arch()
 var platform = process.env.npm_config_platform || os.platform()
@@ -44,6 +48,8 @@ load.resolve = load.path = function (dir) {
   var nearby = resolve(path.dirname(process.execPath))
   if (nearby) return nearby
 
+  const electronVersion = runtime === "electron" && process.env.npm_config_target ? process.env.npm_config_target : process.versions.electron;
+
   var target = [
     'platform=' + platform,
     'arch=' + arch,
@@ -53,7 +59,7 @@ load.resolve = load.path = function (dir) {
     armv ? 'armv=' + armv : '',
     'libc=' + libc,
     'node=' + process.versions.node,
-    process.versions.electron ? 'electron=' + process.versions.electron : '',
+    electronVersion ? 'electron=' + electronVersion : '',
     typeof __webpack_require__ === 'function' ? 'webpack=true' : '' // eslint-disable-line
   ].filter(Boolean).join(' ')
 
@@ -188,6 +194,7 @@ function isNwjs () {
 }
 
 function isElectron () {
+  if (process.env.npm_config_runtime === "electron") return true
   if (process.versions && process.versions.electron) return true
   if (process.env.ELECTRON_RUN_AS_NODE) return true
   return typeof window !== 'undefined' && window.process && window.process.type === 'renderer'
